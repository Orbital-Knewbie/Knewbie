@startuml
Actor User as user
Participant ":View" as view
box Controller
participant ":Route" as Route
participant ":views.py" as views
participant ":validate" as validate
participant ":Questions" as qns
end box
box Model
Participant ":Model" as model
participant ":AdaptiveTesting" as ML
end box
Participant ":database" as database


user --> view : Click "Submit" Question
activate view

view --> Route : execute("Submit Question")
activate Route

Route --> views : quiz()
activate views

views --> validate : validateOnSubmit()
activate validate

validate --> views
deactivate validate

views --> qns
activate qns

qns --> model : submit_response()
activate model

model --> qns : Response(user,form)
deactivate model

qns --> model : get_student_cat()
activate model

model --> qns : theta=Proficiency(user),student=Student(user)
deactivate model

qns --> database : db.session.add(theta),student.get_next_question()
activate database

database --> database : Save to File
activate database
deactivate database

database --> qns : Question(), Proficiency()
deactivate database

qns --> ML : item_response=Proficiency.get_item_responses()
activate ML

ML --> qns : student=Student(item_response)
deactivate ML

qns --> ML : student.update()
activate ML

ML --> qns : student.theta
deactivate ML 

qns --> database : Proficiency.theta=student.theta
activate database

database --> database : Save to File
activate database
deactivate database

database --> qns : Response(), Answer()
deactivate database

qns --> model : correct(Response,Answer)
activate model

model --> qns : correct_responses
deactivate model

qns --> views : result()
deactivate qns

views --> Route : /result
deactivate views

Route --> view : result.html
deactivate Route

view --> user
deactivate view

@enduml